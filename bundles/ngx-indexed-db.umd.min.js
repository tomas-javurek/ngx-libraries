!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("rxjs")):"function"==typeof define&&define.amd?define("ngx-indexed-db",["exports","@angular/core","rxjs"],r):r((e=e||self)["ngx-indexed-db"]={},e.ng.core,e.rxjs)}(this,function(e,r,t){"use strict";var n=function(){function e(){}return e.prototype.openDBAsync=function(e,r,n){var o=this;return new t.Observable(function(t){var c=indexedDB.open(e,n);c.onsuccess=function(e){o.db=e.target.result,t.next(e.target.readyState),t.complete()},c.onerror=function(e){console.error("IndexedDB service: ",e.target.error.name),t.error(e.target.error.name)},c.onupgradeneeded=function(e){o.db=e.target.result;o.db.createObjectStore(r,{autoIncrement:!1})},c.onblocked=function(e){console.error("IndexedDB service: ",e.target.error.name),t.error(e.target.error.name)}})},e.prototype.getObjectStore=function(e,r){return this.db.transaction(e,r).objectStore(e)},e.prototype.getAllRecordsAsync=function(e){var r=this.getObjectStore(e,"readonly");return new t.Observable(function(e){var t=r.openCursor();t.onsuccess=function(r){var t=r.target.result;t?(e.next({key:t.key,value:t.value}),t["continue"]()):e.complete()},t.onerror=function(r){console.error("IndexedDB service:",r.target.error.name),e.error(r.target.error.name)}})},e.prototype.getRecordAsync=function(e,r){var n=this.getObjectStore(e,"readonly");return new t.Observable(function(e){var t=n.get(r);t.onsuccess=function(r){e.next(t.result),e.complete()},t.onerror=function(r){console.error("IndexedDB service:",r.target.error.name),e.error(r.target.error.name)}})},e.prototype.addRecordAsync=function(e,r,n){var o=this.getObjectStore(e,"readwrite");return new t.Observable(function(e){var t=o.put(n,r);t.onsuccess=function(r){e.next(r.target.readyState),e.complete()},t.onerror=function(r){console.error("IndexedDB Service:",r.target.error.name),e.error(r.target.error.name)}})},e.prototype.deleteRecordAsync=function(e,r){var n=this.getObjectStore(e,"readwrite");return new t.Observable(function(e){var t=n["delete"](r);t.onsuccess=function(r){e.next(r.target.readyState),e.complete()},t.onerror=function(r){console.error("IndexedDB service:",r.target.error.name),e.error(r.target.error.name)}})},e.prototype.editRecordAsync=function(e,r,t){return this.addRecordAsync(e,r,t)},e.prototype.clearObjectStoreAsync=function(e){var r=this.getObjectStore(e,"readwrite");return new t.Observable(function(e){var t=r.clear();t.onsuccess=function(r){e.next(r.target.readyState),e.complete()},t.onerror=function(r){console.error("IndexedDB service:",r.target.error.name),e.error(r.target.error.name)}})},e.prototype.closeDB=function(){this.db.close()},e.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=r.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),o=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:[],imports:[],exports:[]}]}],e}();e.NgxIndexedDbModule=o,e.NgxIndexedDbService=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-indexed-db.umd.min.js.map